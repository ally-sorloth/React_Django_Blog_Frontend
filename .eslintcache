[{"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\index.js":"1","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\App.js":"2","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\reportWebVitals.js":"3","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\RegisterPage\\RegisterPage.js":"4","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\Navbar\\Navbar.js":"5","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\context\\AppContext.js":"6","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\LoginPage\\LoginPage.js":"7","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\router\\Router.js":"8","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\HomePage\\MainPage.js":"9","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\card\\PostCard.js":"10","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\card\\PostCardList.js":"11","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\services\\PostData.js":"12","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\HomePage\\tileData.js":"13","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\PostDetail\\PostDetail.js":"14","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\CustomPostPage\\CustomPostPage.js":"15","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\utils\\validations.js":"16","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\providers\\Providers.js":"17","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\router\\PrivateRouter.js":"18","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\ProfilePage\\ProfilePage.js":"19"},{"size":516,"mtime":1613673863911,"results":"20","hashOfConfig":"21"},{"size":173,"mtime":1612106132504,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":6285,"mtime":1612296348482,"results":"24","hashOfConfig":"21"},{"size":6413,"mtime":1614631184750,"results":"25","hashOfConfig":"21"},{"size":433,"mtime":1612122975675,"results":"26","hashOfConfig":"21"},{"size":3854,"mtime":1612132187934,"results":"27","hashOfConfig":"21"},{"size":1356,"mtime":1614628202017,"results":"28","hashOfConfig":"21"},{"size":4349,"mtime":1612621511858,"results":"29","hashOfConfig":"21"},{"size":3214,"mtime":1612559633312,"results":"30","hashOfConfig":"21"},{"size":1607,"mtime":1612472930817,"results":"31","hashOfConfig":"21"},{"size":371,"mtime":1614627797754,"results":"32","hashOfConfig":"21"},{"size":1585,"mtime":1612475695855,"results":"33","hashOfConfig":"21"},{"size":9341,"mtime":1614630556805,"results":"34","hashOfConfig":"21"},{"size":5941,"mtime":1614628705192,"results":"35","hashOfConfig":"21"},{"size":559,"mtime":1612733178825,"results":"36","hashOfConfig":"21"},{"size":379,"mtime":1612222973781,"results":"37","hashOfConfig":"21"},{"size":525,"mtime":1613674763748,"results":"38","hashOfConfig":"21"},{"size":4633,"mtime":1613675628104,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1cznv6s",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"43"},"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\index.js",["88"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Providers } from \"./providers/Providers\";\nimport AppRouter from \"./router/Router\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Providers>\n    <AppRouter />\n  </Providers>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["89","90"],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\App.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\reportWebVitals.js",[],["91","92"],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\RegisterPage\\RegisterPage.js",["93"],"import React from 'react';\r\nimport { Button, Grid, TextField, Container, Avatar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport { postData } from '../../services/PostData'\r\n\r\nconst signUpValidationSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n    password: Yup.string().required(\"No password provided.\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\r\n    password2: Yup.string()\r\n     .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n})\r\n\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n    wrapper: {\r\n        marginTop: \"10rem\",\r\n        \r\n        textAlign: \"center\"\r\n    },\r\n\r\n    div: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    avatar: {\r\n        textAlign: \"center\",\r\n        backgroundColor:theme.palette.primary.main,\r\n\r\n    },\r\n\r\n    register: {\r\n        margin: \"1rem\",\r\n    },\r\n}));\r\n\r\n\r\nfunction RegisterPage() {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          username: \"\",\r\n          email:\"\",\r\n          password:\"\",\r\n          password2:\"\"\r\n        },\r\n        validationSchema: signUpValidationSchema,\r\n        onSubmit: async (values) => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          try {\r\n              const result = await postData(\"https://django-react-blog-36.herokuapp.com/api/user/register/\", values);\r\n          } \r\n          catch ({ response }) {\r\n            // if (response) {\r\n            //   console.log(response.data.non_field_errors[0]);\r\n            // } else {\r\n            //   console.log(\"Something went wrong!\");\r\n            // }\r\n        }\r\n\r\n        },\r\n      });\r\n    //   console.log(formik)\r\n    const registerStyles = stylesFunc();\r\n    return (\r\n        <Container className={registerStyles.wrapper} maxWidth=\"sm\" justify=\"right\">\r\n            <div className={registerStyles.div}>\r\n                <Avatar className={registerStyles.avatar}>\r\n                    <PersonAddIcon/>\r\n                </Avatar>\r\n            </div>\r\n            <Typography className={registerStyles.register} variant=\"h4\">\r\n                Register\r\n            </Typography>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={3} justify=\"flex-end\" alignItems=\"flex-end\">\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        name=\"username\"\r\n                        label=\"Username\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        values={formik.initialValues.username}\r\n                        onChange={formik.handleChange}\r\n                        // {...formik.getFieldProps('displayNa')}\r\n                        error={formik.errors.username}\r\n                        helperText={formik.errors.username}\r\n                        // error={formik.touched.displayName && formik.errors.displayName}\r\n                        // helperText={formik.touched.displayName && formik.errors.displayName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        values={formik.initialValues.email}\r\n                        onChange={formik.handleChange}\r\n                        // {...formik.getFieldProps('email')}\r\n                        error={formik.errors.email}\r\n                        helperText={formik.errors.email}\r\n                        // error={formik.touched.email && formik.errors.email}\r\n                        // helperText={formik.touched.email && formik.errors.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        values={formik.initialValues.password}\r\n                        onChange={formik.handleChange}\r\n                        // {...formik.getFieldProps('password')}\r\n                        error={formik.errors.password}\r\n                        helperText={formik.errors.password}\r\n                        // error={formik.touched.password && formik.errors.password}\r\n                        // helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        name=\"password2\"\r\n                        label=\"Password Again\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        values={formik.initialValues.password2}\r\n                        onChange={formik.handleChange}                        \r\n\r\n                        // {...formik.getFieldProps('password')}\r\n                        error={formik.errors.password2}\r\n                        helperText={formik.errors.password2}\r\n                        // error={formik.touched.password && formik.errors.password}\r\n                        // helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            SUBMIT\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <a href=\"/login\">Already have an account? Sign In</a>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\Navbar\\Navbar.js",["94","95","96","97"],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\context\\AppContext.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\LoginPage\\LoginPage.js",["98"],"import React,{useState} from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import firebase from \"../firebase/firebase.utils\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nconst signInValidationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\r\n});\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"10rem\",\r\n    height: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  signIn: {\r\n    margin: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nfunction LoginPage () {\r\n  const [loginError,setLoginError]=useState(null)\r\n  const signinStyles = stylesFunc();\r\n\r\n  // const handleGoogleButtonClick = () => {\r\n  //   firebase.useGoogleProvider();\r\n  // };\r\n\r\n  // const handleFormSubmit = async (values) => {\r\n  //   try {\r\n  //     const result = await postData\r\n  //   } catch (error) {\r\n      \r\n  //   }\r\n    // alert(JSON.stringify(values, null, 2));\r\n  //   firebase.signIn(values.email, values.password).then(res=>{\r\n  //     res? setLoginError(res):setLoginError(null)\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <Container className={signinStyles.wrapper} maxWidth=\"sm\">\r\n      <Avatar className={signinStyles.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className={signinStyles.signIn} variant=\"h4\">\r\n        Sign In\r\n      </Typography>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={signInValidationSchema}\r\n        // onSubmit={handleFormSubmit}\r\n      >\r\n        {({ handleSubmit, handleChange, values, errors }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  error={errors.email}\r\n                  helperText={errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  error={errors.password}\r\n                  helperText={errors.password}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  onClick={handleGoogleButtonClick}\r\n                >\r\n                  Sign In with Google\r\n                </Button>\r\n              </Grid> */}\r\n            </Grid>\r\n            <p style={{textAlign:\"center\",color:\"red\"}}><small>{loginError}</small></p>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginPage;","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\router\\Router.js",["99"],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\HomePage\\MainPage.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { useEffect, useState, useContext } from  \"react\";\r\nimport Axios from   'axios';\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Grid,\r\n    Container,\r\n    Avatar,\r\n    Typography,\r\n    CircularProgress,\r\n    Paper,\r\n  } from \"@material-ui/core\";\r\n  import GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Image from 'material-ui-image'\r\nimport axios from \"axios\";\r\nimport { appContext } from \"../../context/AppContext\";\r\nimport PostCardList from \"../../components/card/PostCardList\";\r\nimport bike from \"../../assets/static/bike.png\";\r\n\r\n\r\n\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n\r\n  divs: {\r\n    // backgroundColor: 'red',\r\n\r\n  },\r\n   \r\n    wrapper: {\r\n      marginTop: \"5rem\",\r\n      height: \"calc(100vh - 19.0625rem)\",\r\n      textAlign: \"center\",\r\n      \r\n    },\r\n    gridList: {\r\n      width: 500,\r\n      height: 450,\r\n    },\r\n  //   avatar: {\r\n  //     margin: \"1rem auto\",\r\n  //     backgroundColor: theme.palette.primary.main,\r\n  //   },\r\n  //   signIn: {\r\n  //     margin: \"1rem\",\r\n  //   },\r\n  }));\r\n\r\nfunction MainPage() {\r\n  // const { test } = useContext(appContext);\r\n  const [nextUrl, setNextUrl] = useState();\r\n    const [postList, setPostList] = useState([]);\r\n\r\n    const mainStyles = stylesFunc();\r\n    const { REACT_APP_API_BASE_URL } = process.env;\r\n\r\n    // \r\n    const fetchPostList = async() => {\r\n\r\n      // const datapost = await axios.get(url)\r\n      //   .then((res) => setPostList(res?.data.results))\r\n\r\n        // .catch ({ response }) {\r\n        //   if (response) {\r\n        //     console.log(response.data.non_field_errors[0]);\r\n        //   } else {\r\n        //     console.log(\"Something went wrong!\");\r\n        //   }\r\n        // }\r\n        // ...postList, ...result?.data?.data\r\n    \r\n    // console.log(postList)\r\n        try {\r\n            const result = await axios.get(`${REACT_APP_API_BASE_URL}list`);\r\n            // console.log(result)\r\n            setPostList(result?.data.results);\r\n            // setNextUrl(result?.data?.next);\r\n            // console.log(result.data)\r\n\r\n        }  catch ({ response }) {\r\n          // if (response) {\r\n          //   console.log(response.data.non_field_errors[0]);\r\n          // } else {\r\n          //   console.log(\"Something went wrong!\");\r\n          // }\r\n        }\r\n  \r\n      };\r\n      console.log(postList);\r\n\r\n    useEffect(() => {\r\n        fetchPostList();\r\n    }, []);\r\n\r\n    const handleLoadMore = () => {\r\n      fetchPostList(nextUrl)\r\n    };\r\n    if (!postList?.length) return \"Loading...\"\r\n    return (\r\n\r\n    //   <Container className={mainStyles.wrapper}>\r\n    //   {!postList ? (\r\n    //     <CircularProgress />\r\n    //   ) : (\r\n    //     <Grid container spacing={4}>\r\n    //       {postList?.map((post) => {\r\n    //         return (\r\n    //           <Grid item lg={4} md={4} sm={6} xs={12} key={post.id}>\r\n    //             {/* {post.title} */}\r\n    //             <PostCardList\r\n    //               id={post.id}\r\n    //               title={post.title}\r\n    //               content={post.content}\r\n    //               imgSrc={post.image}\r\n    //               publishedDate={post.published_date}\r\n    //               author={post.author}\r\n    //               commentCount={post.get_comment_count}\r\n    //               viewCount={post.get_view_count}\r\n    //               likeCount={post.get_like_count}\r\n    //             />\r\n    //           </Grid>\r\n    //         );\r\n    //       })}\r\n    //     </Grid>\r\n    //   )}\r\n    // </Container>\r\n    <div className={mainStyles.divs}>\r\n    {/* <Paper className={mainStyles.papersty}> */}\r\n    \r\n        <Container className={mainStyles.wrapper} >\r\n           {/* <GridList cellHeight={160} className={mainStyles.gridList} cols={3}>\r\n            {tileData.map((tile) => (\r\n              <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n                <img src={tile.img} alt={tile.title} />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList> */}\r\n               <PostCardList\r\n                 hasNext={!!nextUrl}\r\n                 loadMore={handleLoadMore}\r\n                 postList={postList}           \r\n               />\r\n        </Container>\r\n        {/* </Paper> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\card\\PostCard.js",["116","117","118"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport placeholder from \"../../assets/placeholder.png\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n    padding: 60,\r\n  },\r\n  image: {\r\n    margin: 40,\r\n    padding: 10,\r\n  },\r\n  content: {\r\n    display: \"-webkit-box\",\r\n    \"-webkit-line-clamp\": 2,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n    \"text-overflow\": \"ellipsis\",\r\n    overflow: \"hidden\",\r\n  }\r\n});\r\n\r\n\r\nexport default function PostCard({post}) {\r\n    const {author,\r\n        content,\r\n        detail_url,\r\n        get_comment_count,\r\n        get_like_count,\r\n        get_view_count,\r\n        image,\r\n        published_date,\r\n        slug,\r\n        status,\r\n        title,\r\n        hasUserLiked = false,\r\n      } = post;\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const openPostDetails = () => {\r\n      history.push(`/detail/${slug}`);\r\n  };\r\n\r\n// \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={openPostDetails} >\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={image || placeholder}\r\n          title={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {published_date}\r\n          </Typography>\r\n          <p className={classes.content}>{content}</p>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <AccountCircle className={classes.avatar} />\r\n        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n          {author}\r\n        </Typography>\r\n      </CardActions>\r\n      <CardActions>\r\n        <IconButton>\r\n            <FavoriteIcon color={hasUserLiked ? \"secondary\" : \"primary\"}/>\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_like_count}\r\n        </Typography>\r\n        <IconButton>\r\n            <VisibilityIcon />\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_view_count}\r\n        </Typography>\r\n        <IconButton>\r\n            <ChatBubbleOutlineIcon/>\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_comment_count}\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\card\\PostCardList.js",["119"],"import React from \"react\";\r\nimport PostCard from \"./PostCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // width: 1600,\r\n    \"& > *\": {\r\n      margin: theme.spacing(5),\r\n    },\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nfunction PostCardList({ hasNext, loadMore, postList }) {\r\n  console.log(postList);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container className={classes.root} spacing={5} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            {postList\r\n              ? postList.map((item, id) => (\r\n                  <Grid item sm={4} key={id} item>\r\n                    <PostCard post={item} />\r\n                  </Grid>\r\n                ))\r\n              : \"No data available\"}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        m={1}\r\n        p={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <Box p={1}>\r\n          {hasNext ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => loadMore()}\r\n            >\r\n              View More\r\n            </Button>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostCardList;","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\services\\PostData.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\HomePage\\tileData.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\PostDetail\\PostDetail.js",["120","121","122","123","124","125"],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\CustomPostPage\\CustomPostPage.js",["126","127","128","129"],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\utils\\validations.js",["130","131","132","133"],"import { string, boolean, number, date, array } from \"yup\";\r\n\r\nexport const username = string().required(\"The full name is required.\");\r\nexport const title = string().required(\"The full name is required.\");\r\nexport const content = string().required(\"The full name is required.\");\r\n\r\nexport const email = string(\"Enter your email\")\r\n  .email(\"Enter a valid email\")\r\n  .required(\"Email is required\");\r\n\r\nexport const password = string(\"Enter your password\")\r\n  .min(8, \"Password should be of minimum 8 characters length\")\r\n  .required(\"Password is required\");\r\n","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\providers\\Providers.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\router\\PrivateRouter.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\ProfilePage\\ProfilePage.js",["134","135","136"],"import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { username, email, password } from \"../../utils/validations\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\n\r\nimport axios from \"axios\";\r\nconst validationSchema = yup.object({\r\n  username,\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://picsum.photos/640/480)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  linkWrapper: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nexport const ProfilePage = () => {\r\n  const classes = useStyles();\r\n  \r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log(\"values\", values);\r\n      try {\r\n        const result = await axios.put(\r\n          \"https://django-react-blog-36.herokuapp.com/dj-rest-auth/user/\",\r\n          values,\r\n          {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        console.log(result?.data);\r\n      } catch ({ response }) {\r\n        if (response) {\r\n          console.log(response.data.non_field_errors[0]);\r\n        } else {\r\n          console.log(\"Something went wrong!\");\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <Grid item xs={12} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LocalMallIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Profile\r\n          </Typography>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.username && Boolean(formik.errors.username)}\r\n              helperText={formik.touched.username && formik.errors.username}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"first_name\"\r\n              name=\"first_name\"\r\n              label=\"First Name\"\r\n              value={formik.values.first_name}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.first_name && Boolean(formik.errors.first_name)\r\n              }\r\n              helperText={formik.touched.first_name && formik.errors.first_name}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"last_name\"\r\n              name=\"last_name\"\r\n              label=\"Last Name\"\r\n              value={formik.values.last_name}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.last_name && Boolean(formik.errors.last_name)\r\n              }\r\n              helperText={formik.touched.last_name && formik.errors.last_name}\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              className={classes.submit}\r\n            >\r\n              Update\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n",{"ruleId":"137","severity":1,"message":"138","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":11},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"137","severity":1,"message":"147","line":56,"column":21,"nodeType":"139","messageId":"140","endLine":56,"endColumn":27},{"ruleId":"137","severity":1,"message":"148","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":16},{"ruleId":"137","severity":1,"message":"149","line":31,"column":10,"nodeType":"139","messageId":"140","endLine":31,"endColumn":14},{"ruleId":"137","severity":1,"message":"150","line":31,"column":16,"nodeType":"139","messageId":"140","endLine":31,"endColumn":23},{"ruleId":"137","severity":1,"message":"151","line":36,"column":9,"nodeType":"139","messageId":"140","endLine":36,"endColumn":15},{"ruleId":"137","severity":1,"message":"152","line":44,"column":21,"nodeType":"139","messageId":"140","endLine":44,"endColumn":34},{"ruleId":"137","severity":1,"message":"153","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":21},{"ruleId":"137","severity":1,"message":"154","line":1,"column":38,"nodeType":"139","messageId":"140","endLine":1,"endColumn":48},{"ruleId":"137","severity":1,"message":"155","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":13},{"ruleId":"137","severity":1,"message":"156","line":4,"column":5,"nodeType":"139","messageId":"140","endLine":4,"endColumn":11},{"ruleId":"137","severity":1,"message":"157","line":5,"column":5,"nodeType":"139","messageId":"140","endLine":5,"endColumn":14},{"ruleId":"137","severity":1,"message":"158","line":6,"column":5,"nodeType":"139","messageId":"140","endLine":6,"endColumn":9},{"ruleId":"137","severity":1,"message":"159","line":8,"column":5,"nodeType":"139","messageId":"140","endLine":8,"endColumn":11},{"ruleId":"137","severity":1,"message":"160","line":9,"column":5,"nodeType":"139","messageId":"140","endLine":9,"endColumn":15},{"ruleId":"137","severity":1,"message":"161","line":10,"column":5,"nodeType":"139","messageId":"140","endLine":10,"endColumn":21},{"ruleId":"137","severity":1,"message":"162","line":11,"column":5,"nodeType":"139","messageId":"140","endLine":11,"endColumn":10},{"ruleId":"137","severity":1,"message":"163","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":18},{"ruleId":"137","severity":1,"message":"164","line":14,"column":8,"nodeType":"139","messageId":"140","endLine":14,"endColumn":20},{"ruleId":"137","severity":1,"message":"165","line":16,"column":8,"nodeType":"139","messageId":"140","endLine":16,"endColumn":13},{"ruleId":"137","severity":1,"message":"166","line":18,"column":10,"nodeType":"139","messageId":"140","endLine":18,"endColumn":20},{"ruleId":"137","severity":1,"message":"167","line":20,"column":8,"nodeType":"139","messageId":"140","endLine":20,"endColumn":12},{"ruleId":"137","severity":1,"message":"168","line":53,"column":19,"nodeType":"139","messageId":"140","endLine":53,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":95,"column":8,"nodeType":"171","endLine":95,"endColumn":10,"suggestions":"172"},{"ruleId":"137","severity":1,"message":"156","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":14},{"ruleId":"137","severity":1,"message":"173","line":43,"column":9,"nodeType":"139","messageId":"140","endLine":43,"endColumn":19},{"ruleId":"137","severity":1,"message":"174","line":50,"column":9,"nodeType":"139","messageId":"140","endLine":50,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":34,"column":46,"nodeType":"177","endLine":34,"endColumn":50},{"ruleId":"137","severity":1,"message":"178","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":16},{"ruleId":"137","severity":1,"message":"173","line":77,"column":9,"nodeType":"139","messageId":"140","endLine":77,"endColumn":19},{"ruleId":"169","severity":1,"message":"179","line":92,"column":10,"nodeType":"171","endLine":92,"endColumn":12,"suggestions":"180"},{"ruleId":"137","severity":1,"message":"147","line":97,"column":17,"nodeType":"139","messageId":"140","endLine":97,"endColumn":23},{"ruleId":"137","severity":1,"message":"147","line":116,"column":17,"nodeType":"139","messageId":"140","endLine":116,"endColumn":23},{"ruleId":"137","severity":1,"message":"147","line":143,"column":19,"nodeType":"139","messageId":"140","endLine":143,"endColumn":25},{"ruleId":"137","severity":1,"message":"181","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":11},{"ruleId":"137","severity":1,"message":"182","line":61,"column":10,"nodeType":"139","messageId":"140","endLine":61,"endColumn":18},{"ruleId":"169","severity":1,"message":"179","line":88,"column":6,"nodeType":"171","endLine":88,"endColumn":12,"suggestions":"183"},{"ruleId":"169","severity":1,"message":"184","line":135,"column":6,"nodeType":"171","endLine":135,"endColumn":18,"suggestions":"185"},{"ruleId":"137","severity":1,"message":"186","line":1,"column":18,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"187","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":33},{"ruleId":"137","severity":1,"message":"188","line":1,"column":35,"nodeType":"139","messageId":"140","endLine":1,"endColumn":39},{"ruleId":"137","severity":1,"message":"189","line":1,"column":41,"nodeType":"139","messageId":"140","endLine":1,"endColumn":46},{"ruleId":"137","severity":1,"message":"190","line":4,"column":20,"nodeType":"139","messageId":"140","endLine":4,"endColumn":25},{"ruleId":"137","severity":1,"message":"191","line":4,"column":27,"nodeType":"139","messageId":"140","endLine":4,"endColumn":35},{"ruleId":"137","severity":1,"message":"181","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":11},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],"'result' is assigned a value but never used.","'MenuIcon' is defined but never used.","'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'setLoginError' is assigned a value but never used.","'PrivateRouter' is defined but never used.","'useContext' is defined but never used.","'Axios' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'Typography' is defined but never used.","'CircularProgress' is defined but never used.","'Paper' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'Image' is defined but never used.","'appContext' is defined but never used.","'bike' is defined but never used.","'setNextUrl' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPostList'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'detail_url' is assigned a value but never used.","'status' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'PostCard' is defined but never used.","React Hook useEffect has a missing dependency: 'getPostDetail'. Either include it or remove the dependency array.",["195"],"'Box' is defined but never used.","'anchorEl' is assigned a value but never used.",["196"],"React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["197"],"'boolean' is defined but never used.","'number' is defined but never used.","'date' is defined but never used.","'array' is defined but never used.","'email' is defined but never used.","'password' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [fetchPostList]",{"range":"206","text":"207"},"Update the dependencies array to be: [getPostDetail]",{"range":"208","text":"209"},"Update the dependencies array to be: [getPostDetail, slug]",{"range":"210","text":"211"},"Update the dependencies array to be: [formik, postDetail]",{"range":"212","text":"213"},[2493,2495],"[fetchPostList]",[2916,2918],"[getPostDetail]",[2533,2539],"[getPostDetail, slug]",[3782,3794],"[formik, postDetail]"]