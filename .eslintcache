[{"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\index.js":"1","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\App.js":"2","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\reportWebVitals.js":"3","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\RegisterPage\\RegisterPage.js":"4","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\Navbar\\Navbar.js":"5","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\context\\AppContext.js":"6","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\LoginPage\\LoginPage.js":"7","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\router\\Router.js":"8","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\HomePage\\MainPage.js":"9","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\card\\PostCard.js":"10","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\card\\PostCardList.js":"11","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\services\\PostData.js":"12","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\HomePage\\tileData.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":173,"mtime":1612106132504,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":6285,"mtime":1612296348482,"results":"18","hashOfConfig":"15"},{"size":3517,"mtime":1612125664121,"results":"19","hashOfConfig":"15"},{"size":433,"mtime":1612122975675,"results":"20","hashOfConfig":"15"},{"size":3854,"mtime":1612132187934,"results":"21","hashOfConfig":"15"},{"size":633,"mtime":1612136395700,"results":"22","hashOfConfig":"15"},{"size":4320,"mtime":1612477222707,"results":"23","hashOfConfig":"15"},{"size":3216,"mtime":1612472844228,"results":"24","hashOfConfig":"15"},{"size":1607,"mtime":1612472930817,"results":"25","hashOfConfig":"15"},{"size":371,"mtime":1612221581884,"results":"26","hashOfConfig":"15"},{"size":1585,"mtime":1612475695855,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1cznv6s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\index.js",[],["60","61"],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\App.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\reportWebVitals.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\RegisterPage\\RegisterPage.js",["62"],"import React from 'react';\r\nimport { Button, Grid, TextField, Container, Avatar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport { postData } from '../../services/PostData'\r\n\r\nconst signUpValidationSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n    password: Yup.string().required(\"No password provided.\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\r\n    password2: Yup.string()\r\n     .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n})\r\n\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n    wrapper: {\r\n        marginTop: \"10rem\",\r\n        \r\n        textAlign: \"center\"\r\n    },\r\n\r\n    div: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    avatar: {\r\n        textAlign: \"center\",\r\n        backgroundColor:theme.palette.primary.main,\r\n\r\n    },\r\n\r\n    register: {\r\n        margin: \"1rem\",\r\n    },\r\n}));\r\n\r\n\r\nfunction RegisterPage() {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          username: \"\",\r\n          email:\"\",\r\n          password:\"\",\r\n          password2:\"\"\r\n        },\r\n        validationSchema: signUpValidationSchema,\r\n        onSubmit: async (values) => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          try {\r\n              const result = await postData(\"https://django-react-blog-36.herokuapp.com/api/user/register/\", values);\r\n          } \r\n          catch ({ response }) {\r\n            // if (response) {\r\n            //   console.log(response.data.non_field_errors[0]);\r\n            // } else {\r\n            //   console.log(\"Something went wrong!\");\r\n            // }\r\n        }\r\n\r\n        },\r\n      });\r\n    //   console.log(formik)\r\n    const registerStyles = stylesFunc();\r\n    return (\r\n        <Container className={registerStyles.wrapper} maxWidth=\"sm\" justify=\"right\">\r\n            <div className={registerStyles.div}>\r\n                <Avatar className={registerStyles.avatar}>\r\n                    <PersonAddIcon/>\r\n                </Avatar>\r\n            </div>\r\n            <Typography className={registerStyles.register} variant=\"h4\">\r\n                Register\r\n            </Typography>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={3} justify=\"flex-end\" alignItems=\"flex-end\">\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        name=\"username\"\r\n                        label=\"Username\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        values={formik.initialValues.username}\r\n                        onChange={formik.handleChange}\r\n                        // {...formik.getFieldProps('displayNa')}\r\n                        error={formik.errors.username}\r\n                        helperText={formik.errors.username}\r\n                        // error={formik.touched.displayName && formik.errors.displayName}\r\n                        // helperText={formik.touched.displayName && formik.errors.displayName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        values={formik.initialValues.email}\r\n                        onChange={formik.handleChange}\r\n                        // {...formik.getFieldProps('email')}\r\n                        error={formik.errors.email}\r\n                        helperText={formik.errors.email}\r\n                        // error={formik.touched.email && formik.errors.email}\r\n                        // helperText={formik.touched.email && formik.errors.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        values={formik.initialValues.password}\r\n                        onChange={formik.handleChange}\r\n                        // {...formik.getFieldProps('password')}\r\n                        error={formik.errors.password}\r\n                        helperText={formik.errors.password}\r\n                        // error={formik.touched.password && formik.errors.password}\r\n                        // helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        name=\"password2\"\r\n                        label=\"Password Again\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        values={formik.initialValues.password2}\r\n                        onChange={formik.handleChange}                        \r\n\r\n                        // {...formik.getFieldProps('password')}\r\n                        error={formik.errors.password2}\r\n                        helperText={formik.errors.password2}\r\n                        // error={formik.touched.password && formik.errors.password}\r\n                        // helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            SUBMIT\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <a href=\"/login\">Already have an account? Sign In</a>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\Navbar\\Navbar.js",["63","64","65"],"import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Button from '@material-ui/core/Button';\r\nimport { appContext } from \"../../context/AppContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const history = useHistory();\r\n  // const { token, setToken } = useContext(appContext);\r\n\r\n//   const handleChange = (event) => {\r\n//     setAuth(event.target.checked);\r\n//   };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>      \r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} alignContent=\"flex-start\">\r\n          Awesome Blog\r\n          </Typography>\r\n          <>\r\n            <Button onClick={() => history.push(\"/login\")} color=\"inherit\">\r\n                Login\r\n              </Button>\r\n              <Button onClick={() => history.push(\"/register\")} color=\"inherit\">\r\n                Register\r\n              </Button>\r\n            </>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                {/* {username} */}\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleLogOut}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n           \r\n            {/* // <Menu onClick={() => {window.location.href = \"/login\"}}>Sign in</Menu>\r\n            // <Menu onClick={() => {window.location.href = \"/register\"}}>Sign up</Menu>          */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\context\\AppContext.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\LoginPage\\LoginPage.js",["66"],"import React,{useState} from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import firebase from \"../firebase/firebase.utils\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nconst signInValidationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\r\n});\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"10rem\",\r\n    height: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  signIn: {\r\n    margin: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nfunction LoginPage () {\r\n  const [loginError,setLoginError]=useState(null)\r\n  const signinStyles = stylesFunc();\r\n\r\n  // const handleGoogleButtonClick = () => {\r\n  //   firebase.useGoogleProvider();\r\n  // };\r\n\r\n  // const handleFormSubmit = async (values) => {\r\n  //   try {\r\n  //     const result = await postData\r\n  //   } catch (error) {\r\n      \r\n  //   }\r\n    // alert(JSON.stringify(values, null, 2));\r\n  //   firebase.signIn(values.email, values.password).then(res=>{\r\n  //     res? setLoginError(res):setLoginError(null)\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <Container className={signinStyles.wrapper} maxWidth=\"sm\">\r\n      <Avatar className={signinStyles.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className={signinStyles.signIn} variant=\"h4\">\r\n        Sign In\r\n      </Typography>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={signInValidationSchema}\r\n        // onSubmit={handleFormSubmit}\r\n      >\r\n        {({ handleSubmit, handleChange, values, errors }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  error={errors.email}\r\n                  helperText={errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  error={errors.password}\r\n                  helperText={errors.password}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  onClick={handleGoogleButtonClick}\r\n                >\r\n                  Sign In with Google\r\n                </Button>\r\n              </Grid> */}\r\n            </Grid>\r\n            <p style={{textAlign:\"center\",color:\"red\"}}><small>{loginError}</small></p>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginPage;","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\router\\Router.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\HomePage\\MainPage.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\card\\PostCard.js",["81","82","83"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport placeholder from \"../../assets/placeholder.png\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n    padding: 60,\r\n  },\r\n  image: {\r\n    margin: 40,\r\n    padding: 10,\r\n  },\r\n  content: {\r\n    display: \"-webkit-box\",\r\n    \"-webkit-line-clamp\": 2,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n    \"text-overflow\": \"ellipsis\",\r\n    overflow: \"hidden\",\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default function PostCard({post}) {\r\n    const {author,\r\n        content,\r\n        detail_url,\r\n        get_comment_count,\r\n        get_like_count,\r\n        get_view_count,\r\n        image,\r\n        published_date,\r\n        slug,\r\n        status,\r\n        title,\r\n        hasUserLiked = false,\r\n      } = post;\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const openPostDetails = () => {\r\n      history.push(`/detail/${slug}`);\r\n  };\r\n\r\n// \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={openPostDetails} >\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={image || placeholder}\r\n          title={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {published_date}\r\n          </Typography>\r\n          <p className={classes.content}>{content}</p>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <AccountCircle className={classes.avatar} />\r\n        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n          {author}\r\n        </Typography>\r\n      </CardActions>\r\n      <CardActions>\r\n        <IconButton>\r\n            <FavoriteIcon color={hasUserLiked ? \"secondary\" : \"primary\"}/>\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_like_count}\r\n        </Typography>\r\n        <IconButton>\r\n            <VisibilityIcon />\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_view_count}\r\n        </Typography>\r\n        <IconButton>\r\n            <ChatBubbleOutlineIcon/>\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_comment_count}\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\components\\card\\PostCardList.js",["84"],"import React from \"react\";\r\nimport PostCard from \"./PostCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // width: 1600,\r\n    \"& > *\": {\r\n      margin: theme.spacing(5),\r\n    },\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nfunction PostCardList({ hasNext, loadMore, postList }) {\r\n  console.log(postList);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container className={classes.root} spacing={5} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            {postList\r\n              ? postList.map((item, id) => (\r\n                  <Grid item sm={4} key={id} item>\r\n                    <PostCard post={item} />\r\n                  </Grid>\r\n                ))\r\n              : \"No data available\"}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        m={1}\r\n        p={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <Box p={1}>\r\n          {hasNext ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => loadMore()}\r\n            >\r\n              View More\r\n            </Button>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostCardList;","E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\services\\PostData.js",[],"E:\\FullStack\\Django\\Project_react_blog_frontend\\react_blog_proj\\src\\pages\\HomePage\\tileData.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":56,"column":21,"nodeType":"91","messageId":"92","endLine":56,"endColumn":27},{"ruleId":"89","severity":1,"message":"93","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":27},{"ruleId":"89","severity":1,"message":"94","line":13,"column":10,"nodeType":"91","messageId":"92","endLine":13,"endColumn":20},{"ruleId":"89","severity":1,"message":"95","line":29,"column":16,"nodeType":"91","messageId":"92","endLine":29,"endColumn":23},{"ruleId":"89","severity":1,"message":"96","line":44,"column":21,"nodeType":"91","messageId":"92","endLine":44,"endColumn":34},{"ruleId":"89","severity":1,"message":"93","line":1,"column":38,"nodeType":"91","messageId":"92","endLine":1,"endColumn":48},{"ruleId":"89","severity":1,"message":"97","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":13},{"ruleId":"89","severity":1,"message":"98","line":4,"column":5,"nodeType":"91","messageId":"92","endLine":4,"endColumn":11},{"ruleId":"89","severity":1,"message":"99","line":5,"column":5,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"100","line":6,"column":5,"nodeType":"91","messageId":"92","endLine":6,"endColumn":9},{"ruleId":"89","severity":1,"message":"101","line":8,"column":5,"nodeType":"91","messageId":"92","endLine":8,"endColumn":11},{"ruleId":"89","severity":1,"message":"102","line":9,"column":5,"nodeType":"91","messageId":"92","endLine":9,"endColumn":15},{"ruleId":"89","severity":1,"message":"103","line":10,"column":5,"nodeType":"91","messageId":"92","endLine":10,"endColumn":21},{"ruleId":"89","severity":1,"message":"104","line":13,"column":10,"nodeType":"91","messageId":"92","endLine":13,"endColumn":18},{"ruleId":"89","severity":1,"message":"105","line":14,"column":8,"nodeType":"91","messageId":"92","endLine":14,"endColumn":20},{"ruleId":"89","severity":1,"message":"106","line":16,"column":8,"nodeType":"91","messageId":"92","endLine":16,"endColumn":13},{"ruleId":"89","severity":1,"message":"94","line":18,"column":10,"nodeType":"91","messageId":"92","endLine":18,"endColumn":20},{"ruleId":"89","severity":1,"message":"107","line":51,"column":19,"nodeType":"91","messageId":"92","endLine":51,"endColumn":29},{"ruleId":"89","severity":1,"message":"108","line":55,"column":13,"nodeType":"91","messageId":"92","endLine":55,"endColumn":35},{"ruleId":"89","severity":1,"message":"98","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":14},{"ruleId":"89","severity":1,"message":"109","line":44,"column":9,"nodeType":"91","messageId":"92","endLine":44,"endColumn":19},{"ruleId":"89","severity":1,"message":"110","line":51,"column":9,"nodeType":"91","messageId":"92","endLine":51,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":34,"column":46,"nodeType":"113","endLine":34,"endColumn":50},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'appContext' is defined but never used.","'setAuth' is assigned a value but never used.","'setLoginError' is assigned a value but never used.","'Axios' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'Typography' is defined but never used.","'CircularProgress' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'Image' is defined but never used.","'setNextUrl' is assigned a value but never used.","'REACT_APP_API_BASE_URL' is assigned a value but never used.","'detail_url' is assigned a value but never used.","'status' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]